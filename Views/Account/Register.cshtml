@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@* @{
} *@

@using Desk_Booking.Models
@model RegisterViewModel

@{
    ViewData["Title"] = "Register";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container d-flex justify-content-center align-items-center min-vh-100">
        <div class="form-container shadow-lg p-4 rounded">
            <h2 class="text-center mb-4">@ViewData["Title"]</h2>

            <!-- Register Form -->
            <form id="registerForm" asp-action="Register" asp-controller="Account">
                @* <div class="mb-3"> *@
                @*     <label asp-for="FullName" class="form-label">Full Name</label> *@
                @*     <input asp-for="FullName" class="form-control" /> *@
                @*     <span asp-validation-for="FullName" class="text-danger"></span> *@
                @* </div> *@

                <div class="mb-3">
                    <label asp-for="Email" class="form-label">Email Address</label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Password" class="form-label">Password</label>
                    <input asp-for="Password" type="password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary w-100">Register</button>
                <p class="text-center mt-3">
                    Already have an account? <a asp-action="Login" asp-controller="Account">Login here</a>
                </p>
            </form>

            <!-- Display Errors -->
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger mt-3">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

        </div>
    </div>

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
        <script>
            document.getElementById('registerForm').addEventListener('submit', function (event) {
                event.preventDefault();
                var form = this;
                var formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            alert(data.message);
                            window.location.href = '@Url.Action("Login", "Account")';
                        } else {
                            // Handle validation errors
                            var errorList = document.createElement('ul');
                            errorList.classList.add('text-danger');
                            data.errors.forEach(error => {
                                var listItem = document.createElement('li');
                                listItem.textContent = error;
                                errorList.appendChild(listItem);
                            });
                            form.appendChild(errorList);
                        }
                    })
                    .catch(error => console.error('Error:', error));
            });
        </script>
    }
</body>
</html>
